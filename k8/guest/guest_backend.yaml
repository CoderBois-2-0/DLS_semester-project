apiVersion: v1
kind: Namespace
metadata:
  name: qu-guest-backend

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qu-guest-allow-db-host
  namespace: qu-guest-backend
spec:
  podSelector:
    matchLabels:
      app: qu-guest-backend-deployment
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: qu-guest-db
      ports:
        - protocol: TCP
          port: 27017
    # beware that this cidr should be machine specific in a prod setting
    - from:
      - ipBlock:
          cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: qu-guest-db
      ports:
        - protocol: TCP
          port: 27017
    # beware that this cidr should be machine specific in a prod setting
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: qu-guest-backend-service
  namespace: qu-guest-backend
spec:
  selector:
    app: qu-guest-backend-deployment  # Must match the labels in your Deployment
  ports:
    - protocol: TCP
      port: 5173      # The port exposed inside the cluster
      targetPort: 3000  # The container's port (update as needed)
      nodePort: 30300  # Static port on the node (choose any available port)
  type: NodePort  # Exposes the service on a port accessible outside the cluster

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: qu-guest-backend-deployment
  namespace: qu-guest-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qu-guest-backend-deployment
  template:
    metadata:
      labels:
        app: qu-guest-backend-deployment
    spec:
      containers:
        - name: guest-backend
          image: qu-guest-backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
